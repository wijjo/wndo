#===============================================================================
#===============================================================================
# osd (on-screen display) module for Wndo
#
# Copyright (c) 2007 Steve Cooper, steve@wijjo.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#===============================================================================
#===============================================================================

import os

osd_cat = CMDO.findProgram('osd_cat')

class DEF:
    fontSmall = 'lucidasans-bold-12'
    fontMedium= 'lucidasans-bold-18'
    fontLarge = 'lucidasans-bold-24'
    color     = 'yellow'
    alignment = 5
    duration  = 2

@CMDO.export(
    CMDO.String,
    alignment = WNDO.Alignment(valueDef = DEF.alignment),
    font      = CMDO.String   (valueDef = DEF.fontLarge),
    color     = CMDO.String   (valueDef = DEF.color    ),
    duration  = CMDO.Integer  (valueDef = DEF.duration )
)
def display(s, alignment = None, font = None, color = None, duration = None):
    CMDO.info('OSD: "%s"' % s)
    if osd_cat:
        # Offset by the number of other instances running so that uncleared
        # messages don't overlap.
        #TODO: Come up with a better solution.
        offset = int(os.popen('ps -e | grep osd_cat | wc -l').read().strip()) * 32
        if alignment < 4:
            pos = 'top'
        elif alignment < 7:
            pos = 'middle'
        else:
            pos = 'bottom'
        if (alignment - 1) % 3 == 0:
            align = 'left'
        elif (alignment - 1) % 3 == 1:
            align = 'center'
        else:
            align = 'right'
        if font.lower() == 'small':
            font = DEF.fontSmall
        elif font.lower() == 'medium':
            font = DEF.fontMedium
        elif font.lower() == 'large':
            font = DEF.fontLarge
        os.system('''echo '%s' | "%s" -d %d -p %s -A %s -f "%s" -c %s -o %d &''' % (
                    s, osd_cat, duration, pos, align, font, color, offset))

# vim: filetype=python
